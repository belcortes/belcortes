<script >
<% if current_user %>
var questions = <%= @questions.to_json.html_safe %>;
var last_question = questions[questions.length - 1];
var current_score = <%= current_user.score %>
var subtopic_id = questions[0].subtopic_id
var subtopic = <%= @questions[0].subtopic.to_json.html_safe %>
var subtopic_badge = subtopic.badge
// var badge = $("<img src='"+subtopic_badge+"'/>")
var score_params = {
  id: <%= current_user.id %>,
  score_increment: 10,
  'subtopic_id': subtopic_id,
  'subtopic_badge': subtopic_badge
}



// ==============GLOBAL HELPER FUNCTIONS ============

function update_points_on_DOM(data){
  current_score = data.score;
  $('#points').text(current_score);
  return current_score;
}

function scan_for_images(element){
  element = $(element)
  var patt=/(@@IMAGE=).+(@@IMAGE-END)/g;
  var question_string = element.html();
  var matches = question_string.match(patt);
  console.log(matches)
  if (matches) {
    for (i = 0; i < matches.length; i++){
    var total_length = matches[i].length
    var new_image = matches[i].slice(8,total_length-11)
    };
    question_string_new = question_string.replace(patt,"<img class='scan-image' src='/images/"+new_image+"'/>")
    element.html(question_string_new)
  } else {
    console.log('no images found')
  }
  
}

function add_answer(data, button, question_id){

  // may get more than 1 answer back
  answers_array = data
  var actual_answer = data[0].content
  var user_input = $('input').val()
  console.log(data)
  //REFACTOR!!!!!!!!!!! 
  console.log(actual_answer)
  console.log(user_input)
  if (user_input === actual_answer.toString()){
    $(button).parent().next('.question').show();
    $(button).parent().hide();
    //scan_for_images();
    var question_index = $(button).parent().data('index');
    var num_questions = questions.length;
    update_progressbar(question_index/num_questions * 100);
    

    $.ajax ({
      type: 'POST',
      url: "/add_score",
      data: score_params,
      success: function(data){
        update_points_on_DOM(data);
      }
    });

    if (last_question.id === question_id){
      console.log('you are on the last question!')
      console.log('topic finished!')

      $.ajax({
        type:'POST',
        url: "/add_subtopic",
        data: score_params,
        success: function(data){
          $('.subtopic-id').append(data)
          setTimeout(function () {
            window.location.href = "/subjects";
          }, 1000);
          var badge = $('<img class="badge">'); 
          badge.attr('src', data.html_safe());
          $('.subtopic-badge').append(badge);
        }
      })

    }
  } else {
    alert('Sorry, the answer is incorrect please try again')
  };
  $('input').val('')
}

function update_progressbar(val){
  $("#progressbar").progressbar({
    value: val
  });
}

// =============== JQUERY FUNCTIONS ============

$.fn.bels_awesome_func = function(e){
  // e.preventDefault();
  
  var question_id = this.parent().data('id')
  // var actual_answer = " "
  // console.log('actual answer was just reset to' + actual_answer)
  var answers_array = []
  var button = this;
  // var user_input = get_user_answer()

  $.ajax({
    type: "GET",
    dataType: "JSON", 
    url: "/answers?question_id="+question_id,
    success: function(data){
      add_answer(data, button, question_id);
    }
  })
  // $('input').val('')
};
// ================= DOCUMENT READY ===================


$(function() {
  $('.button').on('click', function() {
    $(this).bels_awesome_func();
  });
  $('#points').append(current_score);
  update_progressbar();
  // scan_for_images();
});
<% end %>
</script>